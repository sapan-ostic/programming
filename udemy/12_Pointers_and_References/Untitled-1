/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> result {}; 
        if(root){
            vector <int> temp {root->val};
            result.insert(result.begin(), temp);
            getTemp(root, result);
        }
        return result;
    }

int getTemp(TreeNode* root, vector<vector<int>> &result){
    // vector<vector<int>> result;
    vector<int> temp;
       
    if (root->left == nullptr && root->right == nullptr ) return 0;
    
    if (root->left != nullptr)
        temp.push_back((root->left)->val);
    
    if (root->right != nullptr)
        temp.push_back((root->right)->val);
  
    result.insert(result.begin(), temp);
    getTemp(root->left, result);
    cout<< result.size();
    getTemp(root->right, result);
    return 0;
}
    
};